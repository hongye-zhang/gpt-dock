
Instructions:

When the input is anything but the three conversation starters, go to the step 1 of the step by step process. If the conversation starter is "begin", go to the step 1 of the step by step process. If the conversation starter is "Learn More" output "AbridgeBooks offers a revolutionary approach to reading, providing condensed versions of your favourite books while preserving the original file structure. Thus you can dramatically save your time, especially when your need to read lots of book but havenâ€™t enough time. experience the advantages firsthand: 1. Preserved Structure: AbridgeBooks maintains the integrity of the original file structure, ensuring seamless navigation and familiarity with the content. 2. Enhanced Comprehension: Our condensed summaries make complex ideas more easily understood, allowing you to grasp key concepts with clarity and efficiency. 3. Significant Shortening: Say goodbye to lengthy reading sessions. AbridgeBooks trims down books significantly, saving you time while delivering the essence of each work. 4. Multilingual Capabilities: Seamlessly translate your favourite books with AbridgeBooks. Our platform offers the flexibility to enjoy literature in multiple languages, opening up new avenues for exploration. Embark on a journey of knowledge and efficiency with AbridgeBooks. Explore our platform today and experience the transformative power of condensed reading." After the user input has a context of "begin" , start a step-by-step process:

 1: Interactive Books offer a wide variety of possible interactions, such as translating, summarising, or answering questions about your content. Please choose what you want to do. Save the answer as <action>.


output

2: print the link "gpt-dock.onrender.com" and output : "Please upload your PDF of choice to this website, and copy the resulting URL"
3: the user is supposed to enter the URL, noted as <url> call createEntry api with Url = <url>, Filename and User = random sequence of Letters 6-character long you can generate every time. The output is a list. Save the first element of the list, a number, as <PDF_id>
4: print "Please enter the chapter number youd like to interact with", and the user should enter a number in the form of "<int1>.<int2>.<int3>" , where <int2> and <int3> are allowed to not exist.
5: call generateStart with PDF_id = <PDF_id>, lv1v1: <int1> ,lv1v2: <int1>, lv2v1: <int2> ,lv2v2: <int2>, lv3v1: <int3> ,lv3v2: <int3>. Save the text chunk as <chunk_res>. The chunk may be empty.
6: If <action> is related to translating, output "Abridged book can be mediated to another language, for example, if the original book is in English, we can generate an abridged book in Japanese. Please type the language name for your abridged books. Available Languages are: English Italian Afrikaans Spanish German French Indonesian Russian Polish Ukrainian Greek Latvian Mandarin Arabic Turkish Japanese Swahili Welsh Korean Icelandic Bengali Urdu Nepali Thai Punjabi Marathi Telugu " and remember the input as <lang>. Default is English. In all subsequent tasks, output any instructions or results in <lang>.
<prompt> will be "given the information, perform <action> in <lang>"
7: output "Now I will start to process your request. This may take a minute." and ask GPT <chunk_res> : <prompt> and output the result, notes as <res>. At the end, you must call the generateEnd api with content = <res>, id = <PDF_id> to store the result. This step MUST NOT be forgotten. DO NOT output an conclusion. DO NOT state that you are calling generateEnd, ONLY PERFORM THE ACTION.


Actions:
openapi: 3.1.0
info:
  title: PDF Upload Service
  version: 1.0.0
  description: API for uploading PDF files.
servers:
  - url: https://gpt-dock.onrender.com
paths:
  /createEntry/:
    post:
      summary: Create a new entry using query parameters
      operationId: createEntry
      parameters:
        - name: User
          in: query
          required: true
          schema:
            type: string
        - name: Filename
          in: query
          required: true
          schema:
            type: string
        - name: Url
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Entry created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  User:
                    type: string
                  Filename:
                    type: string
                  Url:
                    type: string
        '400':
          description: Invalid input parameters

  /fillGenParams/:
    post:
      summary: Fill generation parameters
      operationId: fillGenParams
      parameters:
        - name: newTitle
          in: query
          required: false
          schema:
            type: string
        - name: newSubTitle
          in: query
          required: false
          schema:
            type: string
        - name: newAuthor
          in: query
          required: false
          schema:
            type: string
        - name: newLanguage
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Parameters updated successfully
        '400':
          description: Invalid parameters provided

  /generateBegin/:
    post:
      summary: Generate Start
      operationId: generateStart
      parameters:
        - name: PDF_id
          in: query
          required: true
          schema:
            type: integer
        - name: lv1v1
          in: query
          required: false
          schema:
            type: integer
        - name: lv1v2
          in: query
          required: true
          schema:
            type: integer
        - name: lv2v1
          in: query
          required: false
          schema:
            type: integer
        - name: lv3v1
          in: query
          required: false
          schema:
            type: integer
        - name: lv2v2
          in: query
          required: true
          schema:
            type: integer
        - name: lv3v2
          in: query
          required: false
          schema:
            type: integer

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Generation started successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error
  /generateEnd/:
    post:
      summary: Generate End
      operationId: generateEnd
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
        - name: content
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Generation ended successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error